{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Input from \"../components/Input\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUp() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    username = _React$useState2[0],\n    setUsername = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    password = _React$useState4[0],\n    setPassword = _React$useState4[1];\n  var _React$useState5 = React.useState(''),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    message = _React$useState6[0],\n    setMessage = _React$useState6[1];\n  var signUp = function signUp() {\n    var user = {\n      username: username,\n      pass: password\n    };\n    console.log(username, password);\n    var options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(user)\n    };\n    fetch('http://localhost:5000/', options).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      console.log(response);\n      if (response.message === 'authenticated') setMessage('Usuario autenticado correctamente');else setMessage('Los datos ingresados no son correctos');\n    });\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Sign Up\"\n    }), _jsx(Input, {\n      label: \"Username\",\n      placeholder: \"Ingrese su Nombre de Usuario\",\n      setUsername: setUsername\n    }), _jsx(Input, {\n      label: \"Password\",\n      placeholder: \"Ingrese su Contrase\\xF1a\",\n      setPassword: setPassword\n    }), _jsx(TouchableOpacity, {\n      style: styles.boton,\n      onPress: signUp,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Ingresar\"\n      })\n    }), _jsx(Text, {\n      children: \"Don't have an account? \"\n    }), _jsx(Text, {\n      style: styles.message,\n      children: message\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 24,\n    backgroundColor: \"#fff\"\n  },\n  text: {\n    padding: 10,\n    textAlign: \"center\",\n    marginBottom: 10,\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  boton: {\n    backgroundColor: \"blue\",\n    alignItems: \"center\",\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    color: \"white\"\n  },\n  message: {\n    padding: 10,\n    fontSize: 18,\n    color: 'black'\n  }\n});","map":{"version":3,"names":["Input","React","jsx","_jsx","jsxs","_jsxs","SignUp","_React$useState","useState","_React$useState2","_slicedToArray","username","setUsername","_React$useState3","_React$useState4","password","setPassword","_React$useState5","_React$useState6","message","setMessage","signUp","user","pass","console","log","options","method","headers","body","JSON","stringify","fetch","then","response","json","View","children","Text","style","styles","text","label","placeholder","TouchableOpacity","boton","onPress","buttonText","StyleSheet","create","container","flex","padding","backgroundColor","textAlign","marginBottom","fontSize","fontWeight","alignItems","margin","color"],"sources":["C:/Users/marto/Documents/ORT/5IB/DAI/DAI-Authenication/Frontend/screens/SignUp.jsx"],"sourcesContent":["import { StyleSheet, View, Text, TouchableOpacity } from 'react-native'\r\nimport Input from '../components/Input'\r\nimport React from 'react'\r\n\r\nexport default function SignUp() {\r\n  const [username, setUsername] = React.useState('')\r\n  const [password, setPassword] = React.useState('')\r\n  const [message, setMessage] = React.useState('')\r\n\r\n  const signUp = () => {\r\n    const user = {\r\n      username: username,\r\n      pass: password\r\n    }\r\n    console.log(username, password)\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(user)\r\n    }\r\n    fetch('http://localhost:5000/', options)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        console.log(response)\r\n        if (response.message === 'authenticated') setMessage('Usuario autenticado correctamente')\r\n        else setMessage('Los datos ingresados no son correctos')\r\n      })\r\n  }\r\n\r\n  return (\r\n      <View>\r\n        <Text style={styles.text}>Sign Up</Text>\r\n        <Input label='Username' placeholder='Ingrese su Nombre de Usuario' setUsername={setUsername} />\r\n        <Input label='Password' placeholder='Ingrese su ContraseÃ±a' setPassword={setPassword} />\r\n        <TouchableOpacity style={styles.boton} onPress={signUp}>\r\n          <Text style={styles.buttonText}>Ingresar</Text>\r\n        </TouchableOpacity>\r\n        <Text>Don't have an account? </Text>\r\n        <Text style={styles.message}>{message}</Text>\r\n      </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 24,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  text: {\r\n    padding: 10,\r\n    textAlign: \"center\",\r\n    marginBottom: 10,\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n  boton: {\r\n    backgroundColor: \"blue\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    margin: 10,\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n  },\r\n  message: {\r\n    padding: 10,\r\n    fontSize: 18,\r\n    color: 'black'\r\n  }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}